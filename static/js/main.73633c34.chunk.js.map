{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handlechange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","user","this","searcheMonsterdList","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,G,YAAK,SAACC,GACf,OACA,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACvB,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,aCLRC,G,MAAS,SAACR,GACnB,OACA,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACN,GAAD,OACpB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNXM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OAEjB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EACtDG,SAAUF,MCkCFG,E,kDAlCf,aAAc,IAAD,8BACT,gBAYFH,aAAc,SAACI,GACb,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAQ,CACXlB,QAAQ,GACRe,YAAY,IAJL,E,gEAOS,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKT,SAAS,CAACd,QAAQuB,S,+BAM5B,IAAD,EACkBC,KAAKN,MAA1BlB,EADG,EACHA,QAAQe,EADL,EACKA,YACTU,EAAoBzB,EAAQ0B,QAAO,SAAA1B,GACzC,OAAOA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAGnD,OACE,sBAAK9B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWW,YAAY,iBACtBC,aAAce,KAAKf,eACpB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA5BRI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73633c34.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n import './card.style.css';\r\n\r\nexport const Card=(props)=>{\r\n    return(\r\n    <div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n   <h2> {props.monster.name}</h2>\r\n   <p>{props.monster.email}</p>\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Card} from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList=(props)=>{\r\n    return(\r\n    <div className='card-list'>\r\n     {props.monsters.map((monster)=>(\r\n     <Card key={monster.id} monster={monster}/>))}\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.style.css'\r\nexport const SearchBox = ({placeholder, handlechange})=>(\r\n   \r\n        <input className='search' type='search' placeholder={placeholder}\r\n       onChange={handlechange}/>\r\n    \r\n)","import React, {Component} from 'react';\nimport './App.css';\nimport {CardList} from './component/card-list/card-list.component'\nimport {SearchBox} from './component/search-box/search-box.component'\nclass App extends Component {\nconstructor(){\n    super();\n    this.state = {\n      monster:[],\n      searchField:''\n    };\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response=>response.json())\n    .then(user=>this.setState({monster:user}))\n  }\n\n  handlechange =(e)=>{\n    this.setState({searchField:e.target.value})\n  }\n  render(){\nconst {monster,searchField}=this.state;\nconst searcheMonsterdList=monster.filter(monster=>{\nreturn(monster.name.toLowerCase().includes(searchField.toLowerCase()))\n})\n\n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder='Search Monster'\n       handlechange={this.handlechange}/>\n      <CardList monsters={searcheMonsterdList}/>  \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}